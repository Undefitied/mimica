module.exports = {
  extends: [
    "@mimica/eslint-config",
    "plugin:@typescript-eslint/strict-type-checked",
    "plugin:@typescript-eslint/stylistic-type-checked",
    "plugin:import/typescript",
  ],
  plugins: ["@stylistic/ts"],
  parser: "@typescript-eslint/parser",
  rules: {
    "default-param-last": 0, // TODO: typescript one already enabled
    "no-shadow": 0, // The TS one is enabled
    "no-unused-vars": 0, // The TS one is enabled
    "no-use-before-define": 0, // The TS one is enabled

    "@stylistic/ts/padding-line-between-statements": [
      2,
      {
        blankLine: "always",
        prev: "*",
        next: ["function", "class", "cjs-export", "interface", "type"],
      },
      {
        blankLine: "always",
        prev: ["function", "class", "cjs-export", "interface", "type"],
        next: "*",
      },
    ],

    "@typescript-eslint/default-param-last": 2,
    "@typescript-eslint/explicit-module-boundary-types": 0,
    "@typescript-eslint/consistent-type-imports": [
      2,
      {
        fixStyle: "inline-type-imports",
      },
    ],
    // "@typescript-eslint/member-delimiter-style": [
    //   2,
    //   {
    //     multiline: {
    //       delimiter: "comma",
    //       requireLast: true,
    //     },
    //     singleline: {
    //       delimiter: "comma",
    //       requireLast: false,
    //     },
    //   },
    // ],
    "@typescript-eslint/method-signature-style": 2,
    "@typescript-eslint/no-floating-promises": 0, // TODO: enable this and fix errors
    "@typescript-eslint/no-misused-promises": 0,
    "@typescript-eslint/no-shadow": 2,
    "@typescript-eslint/no-unnecessary-condition": 0, // TODO: enable this and fix errors
    "@typescript-eslint/no-unnecessary-type-parameters": 0,
    "@typescript-eslint/no-unsafe-argument": 0,
    "@typescript-eslint/no-unsafe-assignment": 0,
    "@typescript-eslint/no-unsafe-call": 0,
    "@typescript-eslint/no-unsafe-member-access": 0,
    "@typescript-eslint/no-unsafe-return": 0,
    "@typescript-eslint/prefer-nullish-coalescing": [
      2,
      {
        ignoreConditionalTests: true,
        ignorePrimitives: {
          boolean: true,
          bigint: true,
          number: true,
          string: true,
        },
      },
    ],
    "@typescript-eslint/prefer-readonly": 2,
    "@typescript-eslint/restrict-template-expressions": 0,
    "@typescript-eslint/use-unknown-in-catch-callback-variable": 0,
  },
};
