module.exports = {
  extends: ["airbnb-base", "plugin:unicorn/recommended"],
  env: {
    es6: true,
  },
  plugins: [
    "sonarjs",
    "unicorn",
    "inker",
    "promise",
    "you-dont-need-lodash-underscore",
    "eslint-comments",
  ],
  parser: "@babel/eslint-parser",
  parserOptions: {
    requireConfigFile: false,
  },
  rules: {
    "arrow-parens": 0, // TODO: do not disable "arrow-parens" rule
    camelcase: [
      1,
      {
        allow: [],
      },
    ],
    "consistent-return": 0,
    curly: [2, "all"],
    "function-paren-newline": [0, "never"],
    "guard-for-in": 1,
    "implicit-arrow-linebreak": 0,
    indent: 0,
    "lines-between-class-members": [
      2,
      "always",
      {
        exceptAfterSingleLine: true,
      },
    ],
    "max-params": 2,
    "no-confusing-arrow": 0,
    "no-console": 2,
    "no-continue": 0,
    "no-loop-func": 1,
    "no-param-reassign": [
      2,
      {
        props: false,
      },
    ],
    "no-plusplus": 0,
    "no-restricted-syntax": [
      2,
      "ForInStatement",
      "LabeledStatement",
      "WithStatement",
      {
        selector:
          ':matches(PropertyDefinition, MethodDefinition)[accessibility="private"]',
        message: "Use #private instead.",
      },
    ],
    "no-underscore-dangle": 0,
    "no-unused-private-class-members": 2,
    "no-unused-vars": [2, { args: "none" }],
    "no-useless-escape": 2,
    "object-curly-newline": 0,
    "operator-linebreak": 0,
    "padding-line-between-statements": [
      2,
      {
        blankLine: "always",
        prev: "*",
        next: "function",
      },
      {
        blankLine: "always",
        prev: "function",
        next: "*",
      },
      {
        blankLine: "always",
        prev: "*",
        next: "class",
      },
      {
        blankLine: "always",
        prev: "class",
        next: "*",
      },
      {
        blankLine: "always",
        prev: "cjs-export",
        next: "*",
      },
      {
        blankLine: "always",
        prev: "*",
        next: "cjs-export",
      },
    ],
    "prefer-destructuring": [
      2,
      {
        array: false,
        object: true,
      },
    ],
    quotes: [0, "double"],
    semi: [2, "always"],

    "sonarjs/no-inverted-boolean-check": 2,
    "sonarjs/prefer-immediate-return": 2,
    "sonarjs/prefer-while": 2,

    "unicorn/better-regex": 2,
    "unicorn/catch-error-name": [
      2,
      {
        name: "err",
        ignore: ["error"],
      },
    ],
    "unicorn/consistent-destructuring": 2,
    "unicorn/consistent-existence-index-check": 0,
    "unicorn/consistent-function-scoping": 0,
    "unicorn/custom-error-definition": 2,
    "unicorn/empty-brace-spaces": 0,
    "unicorn/explicit-length-check": 0,
    "unicorn/filename-case": 0,
    "unicorn/import-style": 0,
    "unicorn/no-anonymous-default-export": 0,
    "unicorn/no-array-callback-reference": 0,
    "unicorn/no-array-reduce": [
      2,
      {
        allowSimpleOperations: false,
      },
    ],
    "unicorn/no-nested-ternary": 0,
    "unicorn/no-null": 0,
    "unicorn/no-process-exit": 0,
    "unicorn/no-useless-undefined": 0, // TODO: enable
    "unicorn/numeric-separators-style": 0,
    "unicorn/prefer-add-event-listener": 0, // TODO: enable
    "unicorn/prefer-module": 0,
    "unicorn/prefer-query-selector": 0,
    "unicorn/prefer-set-has": 0, // TODO: enable
    "unicorn/prefer-spread": 0, // TODO: enable
    "unicorn/prefer-switch": 0,
    "unicorn/prefer-ternary": 0, // TODO: enable
    "unicorn/prefer-top-level-await": 0,
    "unicorn/prevent-abbreviations": 0,
    "unicorn/switch-case-braces": 0,
    // "unicorn/template-indent": [
    //   2,
    //   {
    //     selectors: ["TemplateLiteral"],
    //     comments: ["sql"],
    //   },
    // ],

    "inker/enforce-import-name": [
      2,
      {
        paths: [
          {
            name: "path",
            importNames: [
              {
                imported: "namespace",
                local: "Path",
              },
              {
                imported: "default",
                local: "Path",
              },
            ],
          },
          {
            name: "date-fns",
            importNames: [
              {
                imported: "format",
                local: "formatDate",
              },
              {
                imported: "isValid",
                local: "isDateValid",
              },
            ],
          },
          {
            name: "joi",
            importNames: [
              {
                imported: "default",
                local: "Joi",
              },
            ],
          },
          {
            name: "lodash",
            importNames: [
              {
                imported: "namespace",
                local: "_",
              },
              {
                imported: "default",
                local: "_",
              },
            ],
          },
        ],
      },
    ],
    "inker/no-true-as-default": 2,

    "import/order": [
      2,
      {
        groups: [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index",
        ],
        "newlines-between": "always",
        distinctGroup: false,
        warnOnUnassignedImports: true,
      },
    ],

    // "promise/catch-or-return": 2,
    "promise/no-new-statics": 2,
    "promise/no-return-wrap": 2,
    "promise/param-names": 2,
    "promise/prefer-await-to-then": 2,
    "promise/valid-params": 2,

    "you-dont-need-lodash-underscore/concat": 2,
    "you-dont-need-lodash-underscore/drop": 2,
    "you-dont-need-lodash-underscore/drop-right": 2,
    "you-dont-need-lodash-underscore/fill": 2,
    "you-dont-need-lodash-underscore/find": 2,
    "you-dont-need-lodash-underscore/find-index": 2,
    // "you-dont-need-lodash-underscore/from-pairs": 2,
    "you-dont-need-lodash-underscore/index-of": 2,
    "you-dont-need-lodash-underscore/is-array": 2,
    // "you-dont-need-lodash-underscore/is-array-buffer": 2,
    "you-dont-need-lodash-underscore/join": 2,
    "you-dont-need-lodash-underscore/last-index-of": 2,
    "you-dont-need-lodash-underscore/slice": 2,
    "you-dont-need-lodash-underscore/each": 2,
    "you-dont-need-lodash-underscore/every": 2,
    "you-dont-need-lodash-underscore/filter": 2,
    "you-dont-need-lodash-underscore/includes": 2,
    "you-dont-need-lodash-underscore/map": 2,
    // "you-dont-need-lodash-underscore/pluck": 2,
    "you-dont-need-lodash-underscore/reduce": 2,
    "you-dont-need-lodash-underscore/reduce-right": 2,
    "you-dont-need-lodash-underscore/size": 2,
    "you-dont-need-lodash-underscore/some": 2,
    "you-dont-need-lodash-underscore/bind": 2,
    // "you-dont-need-lodash-underscore/partial": 2,
    "you-dont-need-lodash-underscore/is-finite": 2,
    "you-dont-need-lodash-underscore/is-integer": 2,
    "you-dont-need-lodash-underscore/is-nan": 2,
    "you-dont-need-lodash-underscore/assign": 2,
    // "you-dont-need-lodash-underscore/extend": 2,
    "you-dont-need-lodash-underscore/keys": 2,
    "you-dont-need-lodash-underscore/to-pairs": 2,
    "you-dont-need-lodash-underscore/values": 2,
    "you-dont-need-lodash-underscore/ends-with": 2,
    "you-dont-need-lodash-underscore/pad-start": 2,
    "you-dont-need-lodash-underscore/pad-end": 2,
    "you-dont-need-lodash-underscore/repeat": 2,
    "you-dont-need-lodash-underscore/replace": 2,
    "you-dont-need-lodash-underscore/split": 2,
    "you-dont-need-lodash-underscore/starts-with": 2,
    // "you-dont-need-lodash-underscore/template": 2,

    "eslint-comments/no-unused-disable": 2,
    "eslint-comments/no-use": [
      2,
      {
        allow: ["eslint-disable", "eslint-disable-next-line"],
      },
    ],
  },
};
